name: Dependency Update

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install pip-tools
      run: |
        python -m pip install --upgrade pip
        pip install pip-tools

    - name: Update requirements
      run: |
        # Create requirements.in if it doesn't exist
        if [ ! -f requirements.in ]; then
          cp requirements.txt requirements.in
        fi

        # Update dependencies
        pip-compile --upgrade requirements.in

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update dependencies'
        title: 'chore: Update Python dependencies'
        body: |
          ## Dependency Updates

          This PR updates the Python dependencies to their latest versions.

          ### Changes
          - Updated requirements.txt with latest package versions

          ### Testing
          - [ ] All tests pass
          - [ ] Application starts successfully
          - [ ] Core functionality works as expected

          ### Notes
          Please review the changes and test thoroughly before merging.
        branch: update-dependencies
        delete-branch: true

  security-audit:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install safety
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Run security audit
      run: |
        safety check --json --output safety-report.json || true
        safety check

    - name: Upload security report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-audit-report
        path: safety-report.json
