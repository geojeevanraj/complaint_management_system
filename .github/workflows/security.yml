# Security workflow for vulnerability scanning
name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Run every Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Vulnerability Scan
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit semgrep pip-audit
        
    - name: Run Bandit security linter
      run: |
        bandit -r . -f json -o bandit-report.json
        bandit -r . -f txt
        
    - name: Run Safety check
      run: |
        safety check --json --output safety-report.json
        safety check
        
    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit-report.json
        pip-audit
        
    - name: Run Semgrep
      run: |
        semgrep --config=auto --json --output=semgrep-report.json .
        semgrep --config=auto .
        
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
          pip-audit-report.json
          semgrep-report.json
          
    - name: Comment PR with security results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const banditReport = JSON.parse(fs.readFileSync('bandit-report.json', 'utf8'));
            const issueCount = banditReport.results.length;
            
            const comment = `## Security Scan Results üîê
            
            **Bandit Issues Found:** ${issueCount}
            
            ${issueCount > 0 ? '‚ö†Ô∏è Security issues detected. Please review the artifacts.' : '‚úÖ No security issues detected.'}
            
            For detailed reports, check the workflow artifacts.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not parse security reports:', error);
          }
